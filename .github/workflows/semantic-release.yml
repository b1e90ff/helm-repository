name: Release

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Helm Charts CI"]
    types:
      - completed
    branches: [main]

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write
  id-token: write

jobs:
  setup:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      charts: ${{ steps.find.outputs.charts }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Find and setup charts
        id: find
        run: |
          # Setup all charts
          npm run setup
          
          # Find charts for matrix
          charts=$(find . -maxdepth 2 -name "Chart.yaml" -not -path "./.git/*" | xargs -n1 dirname | sed 's|^./||' | jq -R -s -c 'split("\n")[:-1]')
          echo "charts=$charts" >> $GITHUB_OUTPUT

      - name: Cache setup artifacts
        uses: actions/cache@v4
        with:
          path: |
            */package.json
            */release.config.js
            node_modules
          key: setup-${{ github.sha }}

  release:
    name: Release ${{ matrix.chart }}
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ needs.setup.outputs.charts != '[]' }}
    strategy:
      matrix:
        chart: ${{ fromJson(needs.setup.outputs.charts) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up Helm
        uses: azure/setup-helm@v4.3.1
        with:
          version: '3.14.0'

      - name: Restore setup artifacts
        uses: actions/cache@v4
        with:
          path: |
            */package.json
            */release.config.js
            node_modules
          key: setup-${{ github.sha }}

      - name: Git Config
        run: |
          git config --global --add safe.directory $(pwd)
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Create packages directory
        run: mkdir -p packages

      - name: Release chart
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HELM_REGISTRY_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
        run: |
          mkdir -p packages
          cd ${{ matrix.chart }}
          # Login to registry before semantic-release
          echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ghcr.io -u ${{ github.actor }} --password-stdin
          npx semantic-release -e semantic-release-monorepo